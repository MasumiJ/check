package market.dataanalysistool.web;

import javax.enterprise.context.RequestScoped;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;

import market.dataanalysistool.ejb.PeriodOfTime;
import market.dataanalysistool.ejb.StockStdAndPoorSessionBeanRemote;
import market.dataanalysistool.jpa.TickerCloseValues;

@RequestScoped
@Path("getTickerList")
@Produces({ "application/xml", "application/json" })
public class getTickerList {
	public getTickerList() {
		StockStdAndPoorSessionBeanRemote bean;
		Context context;
		try {
			context = new InitialContext();
			bean = (StockStdAndPoorSessionBeanRemote)context.lookup("java:app/MarketDataAnalysisToolEJB/StockStdAndPoorSessionBean!market.dataanalysistool.ejb.StockStdAndPoorSessionBeanRemote");
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	@GET
	@Produces("application/json")
	public TickerCloseValues getAllProducts(@QueryParam("filter") @DefaultValue("") String filter) {
		return bean.getPriceTrendByTime("A", PeriodOfTime.YEAR);
	}
}
